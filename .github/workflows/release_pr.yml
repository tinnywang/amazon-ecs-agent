name: Release Pull Request

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true

jobs:
  release-pull-request:
    name: Release Pull Request
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/github.com/aws/amazon-ecs-agent
    env:
      GIT_BRANCH: "v${{ inputs.version }}"
      GIT_COMMIT_MESSAGE: "Release ${{ inputs.version }}"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: dev
          path: src/github.com/aws/amazon-ecs-agent
      - name: Get GO_VERSION
        id: get-go-version
        run: |
          set -eou pipefail
          go_version=$(cat -e GO_VERSION)
          go_version=${go_version%?}
          go_version_length=${#go_version}
          go_version_re="^([0-9]+\.){1,2}([0-9]+)$"
          if ! [[ $go_version_length -le 10 && $go_version =~ $go_version_re ]] ; then
            echo "invalid GO version"
            exit 1
          fi
          echo "GO_VERSION=$go_version" >> $GITHUB_OUTPUT
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.get-go-version.outputs.GO_VERSION }}
      - name: Update CHANGELOG
        run: |
          set -ex
          : # TODO: update CHANGELOG, exiting early with error if version already exists
      - name: Update VERSION
        run: |
          set -ex
          echo ${{ inputs.version }} > VERSION
          export GOPROXY=direct
          cd agent/version
          GO111MODULE=off go run gen/version-gen.go
      - name: Commit Changes
        run: |
          set -ex
          git checkout -b ${{ env.GIT_BRANCH }}
          git add -A
          # Commit as the github-actions bot.
          # https://github.com/actions/checkout?tab=readme-ov-file#push-a-commit-using-the-built-in-token
          git -c user.name="github-actions[bot]" \
            -c user.email="41898282+github-actions[bot]@users.noreply.github.com" \
            commit -m "${{ env.GIT_COMMIT_MESSAGE }}"
          git push --set-upstream origin ${{ env.GIT_BRANCH }}
      - name: Create Pull Request
        env:
          # Create the pull request using amazon-ecs-bot's token instead of $GITHUB_TOKEN
          # so that status check workflows still run on the pull request.
          # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#using-the-github_token-in-a-workflow
          GH_TOKEN: ${{ secrets.ECS_AGENT_WORKFLOW_SECRET }}
        run: |
          set -ex
          gh pr create \
            --title "${{ env.GIT_COMMIT_MESSAGE }}" \
            --body "TODO" \
            --base dev \
            --head ${{ env.GIT_BRANCH }}
          
          
