name: Release Agent

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"

env:
  GH_TOKEN: ${{ secrets.ECS_AGENT_WORKFLOW_SECRET }}

jobs:
  release-agent:
    name: Release Agent
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/github.com/aws/amazon-ecs-agent
    steps:
      - uses: actions/checkout@v4
        with:
          # TODO: remove `ref` so that it defaults to the SHA of the event that triggered the workflow (push to dev).
          ref: dev
          path: src/github.com/aws/amazon-ecs-agent
          fetch-depth: 0
      - name: Get branch protection rule
        id: get-branch-protection-rule
        run: |
          set -ex
          branch_protection_rule_id=$(gh api graphql -f query='
          {
            repository(owner: "${{ github.repository_owner }}", name: "${{ github.event.repository.name }}") {
              ref(qualifiedName: "master") {
                branchProtectionRule {
                  id
                }
              }
            }
          }' | jq ".data.repository.ref.branchProtectionRule.id")
          echo "BRANCH_PROTECTION_RULE_ID=$branch_protection_rule_id" >> $GITHUB_OUTPUT
      - name: Disable master branch protection rule
        run: |
          set -ex
          gh api graphql -f query='
          mutation {
            updateBranchProtectionRule(input: {
              branchProtectionRuleId: ${{ steps.get-branch-protection-rule.outputs.BRANCH_PROTECTION_RULE_ID }},
              pattern: "master-foo",
            }) {
              branchProtectionRule {
                id
              }
            }
          }'
      - name: Merge dev into master
        run: |
          set -ex
          # TODO: replace --head with the SHA of the event that triggered the workflow.
          pr_url=$(gh pr create --fill-first --base master --head dev)
          gh pr merge $pr_url --auto -m
